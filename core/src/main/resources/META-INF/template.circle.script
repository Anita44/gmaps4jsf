 /*code source: http://maps.forum.nu/gm_sensitive_circle2.html*/
function createCircleFunction#ID(map) {
	var bounds = new GLatLngBounds();
	var circlePoints = Array();
	var circle#ID;
	with (Math) {
		if (#UNIT == 'KM') {
			var d = #RADUIS / 6378.8;	/* radians */
		}
		else { /* miles */
			var d = #RADUIS / 3963.189;	/* radians  */
		}
		var lat1 = (PI / 180) * #LAT; /* radians */
		var lng1 = (PI / 180) * #LNG; /* radians */
		for (var a = 0; a < 361; a++) {
			var tc = (PI / 180) * a;
			var y = asin(sin(lat1) * cos(d) + cos(lat1) * sin(d) * cos(tc));
			var dlng = atan2(sin(tc) * sin(d) * cos(lat1), cos(d) - sin(lat1) * sin(y));
			var x = ((lng1 - dlng + PI) % (2 * PI)) - PI ; /* MOD function */
			var point = new GLatLng(parseFloat(y * (180 / PI)), parseFloat(x * (180 / PI)));
			circlePoints.push(point);
			bounds.extend(point);
		}
		if (d < 1.5678565720686044) {
			circle#ID = new GPolygon(circlePoints, #STROKE_COLOUR, #LINE_WIDTH, #STROKE_OPACITY, #FILL_COLOUR, #FILL_OPACITY);	
		}
		else {
			circle#ID = new GPolygon(circlePoints, #STROKE_COLOUR, #LINE_WIDTH, #STROKE_OPACITY);	
		}
		map.addOverlay(circle#ID);			
	}
}